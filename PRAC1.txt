
[2]: 
import pandas as pd
from sklearn.preprocessing import LabelEncoder,OneHotEncoder,MinMaxScaler

[3]:
df=pd.read_csv("supermarket_sales.csv")

[4]:
df.head()

[5]: 
df.tail()

[6]: 
df.info()

[7]:
df.describe()

[8]: 
df.index

[9]:
df.columns

[10]:
df.shape

[11]:
df.dtypes

[12]:
df['Outcome'] = df['Outcome'].astype('category')


df.dtypes

[13]:
df.columns.values

[14]:
df.sort_index(axis=1)

[15]:
df.iloc[0:2]

[16]:
df.iloc[0:1,1:3]

[17]:
df.isnull()

[18]:
df.isnull().any()

[19]:
df.isnull().sum().sum()

[20]:
df['Age'].unique()

[21]:
def label_encoding(df, column_name):
	label_encoder = LabelEncoder()
        df[column_name + '_LabelEncoded'] = label_encoder.
         ↪fit_transform(df[column_name])
	print("DataFrame after label encoding:")
	print(df.iloc[:2,8:])
		
def one_hot_encoding(df, column_name):
	one_hot_encoder = OneHotEncoder()
	one_hot_encoded = one_hot_encoder.fit_transform(df[[column_name]]).toarray()
	enc_df = pd.DataFrame(one_hot_encoded, columns=[column_name + '_' + str(i)␣
        ↪for i in range(one_hot_encoded.shape[1])])
	df = pd.concat([df, enc_df], axis=1)
	print("\nDataFrame after one-hot encoding:")
	print(df.iloc[:2,8:])

def dummy_encoding(df, column_name):
	dummy_encoded = pd.get_dummies(df[column_name], prefix=column_name)
	df = pd.concat([df, dummy_encoded], axis=1)
	print("\nDataFrame after dummy encoding:")
	print(df.iloc[:2,8:])

label_encoding(df, 'Outcome')

one_hot_encoding(df, 'Outcome')

dummy_encoding(df, 'Outcome')

[26]:

df_normalized = df.drop(columns=['Outcome']).copy()
scaler = MinMaxScaler()
df_normalized = pd.DataFrame(scaler.fit_transform(df_normalized),␣
	↪columns=df_normalized.columns)
df_normalized.head()

