In [1 ]: # imports
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

import warnings
warnings.filterwarnings('ignore')
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, mean_absolute_error

In [ 2]: boston_data = pd.read_csv("HousingData.csv")

In [ 3]: boston_data.info()

In [ 4]: boston_data.isnull().sum()

In [5]: boston_data.isna().sum().sum()

In [6]: data = boston_data.dropna()
data

In [7]: plt.figure(figsize=(12,8))
sns.heatmap(data.corr().abs(), annot= True, cmap= 'coolwarm');

In [8]: train_df= data[['LSTAT', 'PTRATIO','RM', 'TAX','INDUS','MEDV']]
train_df

In [9]: x = train_df[['LSTAT', 'RM', 'TAX', 'INDUS']]
        y = train_df['MEDV']

In [10]: scaler = StandardScaler()
	 x = scaler.fit_transform(x)

In [11]: x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, shuffle=True)

In [12]: model = LinearRegression()
model.fit(x_train, y_train)

In [13]: y_pred = model.predict(x_test)

In [14]: y_pred[:5]

In [15]: y_test[:5]

In [16]: mse = mean_squared_error(y_test, y_pred)
mse

In [17]: sns.regplot(x = y_test, y = y_pred, ci= 95)

